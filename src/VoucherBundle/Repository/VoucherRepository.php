<?php

namespace VoucherBundle\Repository;

/**
 * VoucherRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoucherRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get all Vouchers by id
     * @param array  $ids
     * @return mixed
     */
    public function getAllByBookletIds(array $ids)
    {
        $qb = $this->createQueryBuilder("v");
        $q = $qb->leftJoin('v.booklet', 'b')
            ->andWhere('b.id IN (:ids)')
            ->setParameter('ids', $ids);

        return $q->getQuery();
    }

    /**
     * Get queryset for the streamed response
     * @param array  $booklets
     * @return mixed
     */
    public function getAllByBooklets(array $booklets)
    {
        $qb = $this->createQueryBuilder("v");
        $q = $qb->leftJoin("v.booklet", "b")
            ->where("b IN (:booklets)")
            ->setParameter("booklets", $booklets);

        return $q->getQuery();
    }

    public function countByBookletsIds(array $ids) {
        $qb = $this->createQueryBuilder("v");
        $q = $qb->leftJoin("v.booklet", "b")
            ->select('count(v.id)')
            ->where("b.id IN (:ids)")
            ->setParameter("ids", $ids);

        return $q->getQuery()->getSingleScalarResult();
    }

    public function countByBooklets(array $booklets) {
        $qb = $this->createQueryBuilder("v");
        $q = $qb->leftJoin("v.booklet", "b")
            ->select('count(v.id)')
            ->where("b IN (:booklets)")
            ->setParameter("booklets", $booklets);

        return $q->getQuery()->getSingleScalarResult();
    }
}
